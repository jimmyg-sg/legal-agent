{"createdAt":"2025-08-04T14:25:54.210Z","updatedAt":"2025-08-20T15:34:12.039Z","id":"zCcosINbYW5PQfve","name":"LG_GENERATE_ENVELOPE_DOCUSIGN","active":false,"isArchived":false,"nodes":[{"parameters":{"url":"=https://graph.microsoft.com/v1.0/sites/{{ $('Set Input Variables').item.json.sharepoint_location }}.sharepoint.com","authentication":"predefinedCredentialType","nodeCredentialType":"microsoftOAuth2Api","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-1008,192],"id":"27850e50-0f07-4510-bad4-4c06422d8251","name":"Get Root Site","credentials":{"microsoftOAuth2Api":{"id":"KXqgPVx1RaiDMSOa","name":"Alejandro_R_Microsoft account"}}},{"parameters":{"url":"=https://graph.microsoft.com/v1.0/sites/{{ $json.id }}/drive","authentication":"predefinedCredentialType","nodeCredentialType":"microsoftOAuth2Api","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-736,192],"id":"9562f95b-66dd-45ea-8021-1291623da68b","name":"Get Main Drive","credentials":{"microsoftOAuth2Api":{"id":"KXqgPVx1RaiDMSOa","name":"Alejandro_R_Microsoft account"}}},{"parameters":{"url":"=https://graph.microsoft.com/v1.0/drives/{{ $json.id }}/root:/SOLVO:/children","authentication":"predefinedCredentialType","nodeCredentialType":"microsoftOAuth2Api","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-480,192],"id":"0b29a7d6-9f1c-4693-a5e4-1371001a0db0","name":"Get Solvo Folder","credentials":{"microsoftOAuth2Api":{"id":"KXqgPVx1RaiDMSOa","name":"Alejandro_R_Microsoft account"}}},{"parameters":{"url":"=https://graph.microsoft.com/v1.0/drives/{{ $('Get Solvo Folder').item.json.value[0].parentReference.driveId }}/root:/{{ $('Set Input Variables').item.json.folder_name }}/{{ $('Set Input Variables').item.json.file_name }}:/content?format=pdf","authentication":"predefinedCredentialType","nodeCredentialType":"microsoftOAuth2Api","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-896,416],"id":"53cffa3d-0a91-482e-87f3-2072c7bd555d","name":"Fetch PDF File","credentials":{"microsoftOAuth2Api":{"id":"KXqgPVx1RaiDMSOa","name":"Alejandro_R_Microsoft account"}}},{"parameters":{"content":"# SharePoint\n\n\n**Project Directory**: LEGAL_AGENT  \n**Developer Folder**: ALAJANDRO  \n**Created by**: Alajandro  \n**Version**: 1.0  \n**Date**: 2025-08-05  \n**Reviewer**: [Pending]  \n**Purpose**: Retrieve and extract a specific PDF file from a SharePoint folder for further processing.\n\n---\n\n## Overview\n\nThis workflow performs a 5-step process to access, locate, and download a specific file from **SharePoint (Microsoft Graph API)**.\n\n---\n\n## Workflow Steps\n\n### 1. `Get Root Site`\n- **Node Name**: `Get Root Site`\n- **Type**: HTTP Request\n- **Purpose**: Retrieves SharePoint metadata by site URL `softwareestrategico.sharepoint.com`.\n- **Output**: `siteId` needed to access drives.\n\n---\n\n### 2. `Get Main Drive`\n- **Node Name**: `Get Main Drive`\n- **Type**: HTTP Request\n- **Purpose**: Retrieves the default drive (document library) for the given site.\n- **Input**: `siteId` from previous node.\n- **Output**: `driveId`\n\n---\n\n### 3. `Get Solvo Folder`\n- **Node Name**: `Get Solvo Folder`\n- **Type**: HTTP Request\n- **Purpose**: Navigates to the folder named `SOLVO` in the root of the drive and lists its contents.\n- **Input**: `driveId`\n- **Output**: Folder content and `parentReference.driveId`\n\n---\n\n### 4. `Set File Parameters`\n- **Node Name**: `Set File Parameters`\n- **Type**: Set\n- **Purpose**: Defines dynamic variables for folder and file names.\n- **Values**:\n  - `folder_name`: `SOLVO`\n  - `file_name`: `Plantilla firmas.docx`\n- **Used for**: Constructing download path in the next step.\n\n---\n\n### 5. `Fetch PDF File`\n- **Node Name**: `Fetch PDF File`\n- **Type**: HTTP Request\n- **Purpose**: Downloads the file from SharePoint and requests it as PDF format.\n- **Endpoint format**:\n  ```\n  https://graph.microsoft.com/v1.0/drives/{{ driveId }}/root:/{{ folder_name }}/{{ file_name }}:/content?format=pdf\n  ```\n\n---\n\n### 6. `Convert File Extractor`\n- **Node Name**: `Convert File Extractor`\n- **Type**: Extract From File\n- **Purpose**: Converts the downloaded binary file into a usable data property (e.g., text, metadata).\n- **Use Case**: OCR, AI processing, validation.\n\n---\n\n## Standards Compliance\n\n| Area                        | Compliance |\n|-----------------------------|------------|\n| Node Naming (CamelCase)     | âœ… Yes     |\n| Flow Naming (Uppercase, _)  | âœ… SHP_GET_PDF_FILE |\n| Comments via Sticky Notes   | â›” Not present (can be added) |\n| Safe Credential Handling    | âœ… Uses `microsoftOAuth2Api` |\n| Clear API Inputs/Outputs    | âœ… Documented |\n| Dynamic Parameters          | âœ… folder/file names |\n| No Hardcoded Sensitive Data | âœ… Compliant |\n\n---\n\n> ðŸ“Ž This flow is essential for automation involving document retrieval, conversion, and subsequent integrations (e.g., DocuSign, OCR pipelines).\n","height":2208,"width":800,"color":4},"type":"n8n-nodes-base.stickyNote","position":[-8016,-768],"typeVersion":1,"id":"0cd79e93-d881-41a7-af43-1bf12090a560","name":"Sticky Note"},{"parameters":{"method":"POST","url":"https://account-d.docusign.com/oauth/token","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/x-www-form-urlencoded"}]},"sendBody":true,"contentType":"form-urlencoded","bodyParameters":{"parameters":[{"name":"grant_type","value":"urn:ietf:params:oauth:grant-type:jwt-bearer"},{"name":"assertion","value":"={{ $json.token }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[256,416],"id":"10db7c52-1f9b-4a6c-aa2e-209872ce9e7b","name":"Get DocuSign Access Token"},{"parameters":{"content":"# Sharepoint\n","height":560,"width":864,"color":4},"type":"n8n-nodes-base.stickyNote","position":[-1136,48],"typeVersion":1,"id":"8b57495f-901d-4113-a655-2d4ee27eec77","name":"Sticky Note2"},{"parameters":{"assignments":{"assignments":[{"id":"4578d706-392b-4a6c-95a5-29a762bbe387","name":"iss","value":"88d4eb7d-2f8c-4369-8254-8e7c9e8300e2","type":"string"},{"id":"56b3ff03-ca14-497d-9c8b-d5895e212ecf","name":"sub","value":"=5cd9038c-201f-4715-a574-7e49285afae5","type":"string"},{"id":"1ad79f2f-e10a-4205-bafc-e02de78f563b","name":"aud","value":"account-d.docusign.com","type":"string"},{"id":"f30086cd-3f6c-47e3-bdc3-e97cea983aeb","name":"iat","value":"={{ Math.floor(Date.now() / 1000) }}","type":"number"},{"id":"c138bf91-202a-4d24-81fc-b4b63eb959ae","name":"exp","value":"={{ Math.floor(Date.now() / 1000) + 3600 }}","type":"number"},{"id":"36de702b-5caf-4a98-974a-95dc6aad5e58","name":"scope","value":"signature impersonation","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[128,192],"id":"7e2775f3-dd6f-482e-ba31-2e8960ab8e31","name":"Set Token Claims"},{"parameters":{"useJson":true,"claimsJson":"={{ $json }}","options":{}},"type":"n8n-nodes-base.jwt","typeVersion":1,"position":[432,192],"id":"431799bf-c76d-4277-ad34-a9dfb42c946c","name":"Generate DocuSign Token","credentials":{"jwtAuth":{"id":"3h0Xf0p9QfSLSfeT","name":"DEMO_CREDENCIAL"}}},{"parameters":{"operation":"binaryToPropery","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[-576,416],"id":"b3861ab4-e13d-4149-868a-2809586ad3e2","name":"Convert File Extractor"},{"parameters":{"url":"=https://account-d.docusign.com/oauth/userinfo","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"=Bearer {{ $('Get DocuSign Access Token').item.json.access_token }}"},{"name":"Content-Type","value":"application/json"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1024,224],"id":"5f965dfd-2b0d-48d9-a296-d6ae0ef47aff","name":"Get Account ID"},{"parameters":{"content":"# Token \n## Technical Documentation â€“ Generate DocuSign Token Flow\n\n\n**Project Directory**: LEGAL_AGENT  \n**Developer Folder**: ALAJANDRO  \n**Created by**: Alajandro  \n**Version**: 1.0  \n**Date**: 2025-08-05  \n**Reviewer**: [Pending]  \n**Purpose**: Authenticate to DocuSign API via JWT for token generation and account identification.\n\n---\n\n## Overview\n\nThis workflow authenticates to the **DocuSign API** using **JWT Bearer Authentication**, in four sequential nodes. It is used to obtain an access token and retrieve the authenticated account ID, allowing secure, manual-free access to DocuSign's services.\n\n---\n\n## Workflow Steps\n\n### 1. `Set Token Claims`\n- **Node Name**: `Set Token Claims`\n- **Type**: Set\n- **Purpose**: Assign JWT claims dynamically.\n- **Parameters**:\n  - `iss`: Integration Key\n  - `sub`: User ID\n  - `aud`: `account-d.docusign.com`\n  - `iat`: Current timestamp (in seconds)\n  - `exp`: iat + 3600 seconds (1 hour)\n  - `scope`: `signature impersonation`\n- **Note**: Uses dynamic timestamps via `Date.now()` for validity.\n\n---\n\n### 2. `Generate DocuSign Token`\n- **Node Name**: `Generate DocuSign Token`\n- **Type**: JWT\n- **Purpose**: Generate signed JWT from previous claims.\n- **Input**: Full JSON from `Set Token Claims`\n- **Credentials**: `jwtAuth` credential set (e.g., `DEMO_CREDENCIAL`)\n- **Output**: Signed token in `$json.token`\n\n---\n\n### 3. `Get DocuSign Access Token`\n- **Node Name**: `Get DocuSign Access Token`\n- **Type**: HTTP Request (POST)\n- **Purpose**: Exchange JWT for a valid OAuth2 access token.\n- **Endpoint**: `https://account-d.docusign.com/oauth/token`\n- **Headers**:\n  - `Content-Type`: `application/x-www-form-urlencoded`\n- **Body**:\n  - `grant_type`: `urn:ietf:params:oauth:grant-type:jwt-bearer`\n  - `assertion`: `{{ $json.token }}`\n- **Output**: `access_token`\n\n---\n\n### 4. `Get Account ID`\n- **Node Name**: `Get Account ID`\n- **Type**: HTTP Request (GET)\n- **Purpose**: Retrieve account details using the access token.\n- **Endpoint**: `https://account-d.docusign.com/oauth/userinfo`\n- **Headers**:\n  - `Authorization`: `Bearer {{ $('Get DocuSign Access Token').item.json.access_token }}`\n  - `Content-Type`: `application/json`\n- **Output**: User info including `account_id`\n\n---\n\n## JWT Payload Example\n\n```json\n{\n  \"iss\": \"6ae84da9-0675-4a46-8683-b1648d4d109c\",\n  \"sub\": \"4ea4013e-4bfc-4c31-86da-304e7a2de879\",\n  \"aud\": \"account-d.docusign.com\",\n  \"iat\": 1697892000,\n  \"exp\": 1697895600,\n  \"scope\": \"signature impersonation\"\n}\n```\n\nConsent URL:  \n```\nhttps://account-d.docusign.com/oauth/auth?response_type=code&scope=signature%20impersonation&client_id=6ae84da9-0675-4a46-8683-b1648d4d109c&redirect_uri=https://developers.docusign.com/platform/auth/consent\n```\n\n---\n\n## Sticky Note in Flow\n> `# Generate Token to DocuSign`  \nLocated at the beginning of the flow (n8n node `Sticky Note4`), it complies with documentation standards per section 7 (Solvo IA v1.1).\n\n---\n\n## Standards Compliance\n\n| Area                        | Compliance |\n|-----------------------------|------------|\n| Node Naming (CamelCase)     | âœ… Yes     |\n| Flow Naming (Uppercase, _)  | âœ… DS_AUTH_GET_TOKEN |\n| Comments via Sticky Notes   | âœ… Present |\n| Use of JWT Claims           | âœ… Structured |\n| Safe Credential Handling    | âœ… With `jwtAuth` |\n| Clear API Inputs/Outputs    | âœ… Documented |\n| Dynamic Parameters          | âœ… With `Date.now()` |\n| No Hardcoded Sensitive Data | âœ… Compliant |\n","height":2736,"width":816,"color":3},"type":"n8n-nodes-base.stickyNote","position":[-7200,-768],"typeVersion":1,"id":"4b302ac3-d2f2-49c8-8b60-65937faabb5c","name":"Sticky Note3"},{"parameters":{"content":"# Token  \n \n","height":560,"width":688,"color":3},"type":"n8n-nodes-base.stickyNote","position":[-16,80],"typeVersion":1,"id":"fa3b6bc7-f90e-47d6-b372-74a201a832a8","name":"Sticky Note4"},{"parameters":{"method":"POST","url":"=https://demo.docusign.net/restapi/v2.1/accounts/{{ $('Get Account ID').item.json.accounts[0].account_id }}/envelopes","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"=Bearer {{ $('Get DocuSign Access Token').item.json.access_token }}"},{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"contentType":"raw","rawContentType":"=","body":"={\n  \"emailSubject\": \"Firma requerida\",\n  \"status\": \"sent\",\n  \"documents\": [\n    {\n      \"documentBase64\": \"{{ $('Convert File Extractor').item.json.data }}\",\n      \"name\": \"{{ $('Set Input Variables').item.json.file_name }}\",\n      \"fileExtension\": \"pdf\",\n      \"documentId\": \"1\"\n    }\n  ],\n  \"recipients\": {\n    \"signers\": [\n      {\n        \"email\": \"{{ $('Get  Internal  Solvo User').item.json.email }}\",\n        \"name\": \"Solvo_interno  {{ $('Get  Internal  Solvo User').item.json.full_name }}\",\n        \"recipientId\": \"2\",\n        \"routingOrder\": \"1\",\n        \"tabs\": {\n          \"signHereTabs\": [\n            {\n              \"anchorString\": \"{{ $json.Keyword_2 }}\",\n              \"anchorUnits\": \"pixels\",\n              \"anchorYOffset\": \"{{ $json.Location_y }}\",\n              \"anchorXOffset\": \"{{ $json.Location_x }}\"\n            }\n          ]\n        }\n      },\n      {\n        \"email\": \"{{ $('Set Input Variables').item.json.external_agent_email }}\",\n        \"name\": \"Firmante externo {{ $('Set Input Variables').item.json.external_agent_name }} \",\n        \"recipientId\": \"1\",\n        \"routingOrder\": \"2\",\n        \"tabs\": {\n          \"signHereTabs\": [\n            {\n              \"anchorString\": \"{{ $json.Keyword_1 }}\",\n              \"anchorUnits\": \"pixels\",\n              \"anchorYOffset\": \"{{ $json.Location_y_2 }}\",\n              \"anchorXOffset\": \"{{ $json.Location_x_2 }}\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"eventNotification\": {\n    \"url\": \"https://legal-agent-dev.toolssolvo.com/webhook-test/4a9c58d0-d8f5-46b7-b569-76c13ae7678a\",\n   \"requireAcknowledgment\": \"true\",\n    \"includeTimeZone\": \"true\",\n    \"includeEnvelopeVoidReason\": \"true\",\n    \"includeDocumentFields\": \"true\",\n    \"includeCertificateOfCompletion\": \"false\",\n    \"includeHMAC\": \"true\",\n    \"loggingEnabled\": \"false\",\n    \"envelopeEvents\": [\n      { \"envelopeEventStatusCode\": \"sent\",      \"includeDocuments\": \"false\" },\n      { \"envelopeEventStatusCode\": \"delivered\", \"includeDocuments\": \"false\" },\n      { \"envelopeEventStatusCode\": \"completed\", \"includeDocuments\": \"false\" },\n      { \"envelopeEventStatusCode\": \"declined\",  \"includeDocuments\": \"false\" },\n      { \"envelopeEventStatusCode\": \"voided\",    \"includeDocuments\": \"false\" }\n    ],\n    \"recipientEvents\": [\n      { \"recipientEventStatusCode\": \"Sent\" },\n      { \"recipientEventStatusCode\": \"Delivered\" },\n      { \"recipientEventStatusCode\": \"Completed\" },\n      { \"recipientEventStatusCode\": \"Declined\" }\n    ]\n  }\n}\n","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1200,480],"id":"0ff316e8-b5e7-47ef-92e9-fce051e99ea3","name":"Send Envelop"},{"parameters":{"content":"# Envelop\n","height":560,"width":768},"type":"n8n-nodes-base.stickyNote","position":[848,64],"typeVersion":1,"id":"1c67a0da-86f0-4a8f-a7ff-c35c34d52509","name":"Sticky Note5"},{"parameters":{"content":"\n# GuÃ­a de variables para el **raw JSON** (n8n â†’ DocuSign)\n\nEste documento explica cada campo del **payload JSON** que envÃ­as desde n8n al endpoint:\n```\nPOST /restapi/v2.1/accounts/{accountId}/envelopes\n```\nSu objetivo es crear y **enviar** un sobre con dos firmantes usando **anchors** (palabras clave) dentro del PDF.\n\n---\n\n\n---\n\n## Campos a nivel de **sobre**\n\n- **`emailSubject`** *(string)*  \n  Asunto del correo que DocuSign enviarÃ¡ a los firmantes.  \n  - Ej: `\"Firma pendiente: Documento legal para su revisiÃ³n\"`\n\n- **`status`** *(string)*  \n  Estado inicial del sobre.  \n  - `\"sent\"` â†’ crea **y envÃ­a** inmediatamente.  \n  - `\"created\"` â†’ crea **en borrador** (no envÃ­a).\n\n---\n\n## SecciÃ³n **documents[]**\n\n- **`documentBase64`** *(string, Base64)*  \n  Contenido del PDF en **Base64**.  \n  - En este flujo: `{{ $('Convert File Extractor').item.json.data }}`  \n  - AsegÃºrate de que **no** incluya prefijo MIME (`data:application/pdf;base64,`).\n\n- **`name`** *(string)*  \n  Nombre visible del archivo dentro del sobre (no tiene que coincidir con el nombre original).\n\n- **`fileExtension`** *(string)*  \n  ExtensiÃ³n del archivo, ej. `\"pdf\"`.\n\n- **`documentId`** *(string)*  \n  Identificador interno **Ãºnico** para este sobre (por documento). Empieza normalmente en `\"1\"`.\n\n---\n\n## SecciÃ³n **recipients.signers[]** (firmantes)\n\nCada firmante se define con:\n\n- **`email`** *(string)*  \n  Correo al que DocuSign enviarÃ¡ la solicitud de firma.  \n  - Variables del flujo: `{{ $json.Email_1 }}`, `{{ $json.Email_2 }}`.\n\n- **`name`** *(string)*  \n  Nombre mostrado al firmante en DocuSign.  \n  - Puedes parametrizarlo, p.ej. `{{ $json.Nombre_1 }}`.\n\n- **`recipientId`** *(string)*  \n  Identificador del firmante dentro del sobre. Debe ser Ãºnico (ej. `\"1\"`, `\"2\"`).\n\n- **`routingOrder`** *(string)*  \n  **Orden de turno** para firmar.  \n  - `\"1\"` firma primero; `\"2\"` firma despuÃ©s; mismo nÃºmero = firma en paralelo.\n\n- **`tabs.signHereTabs[]`**  \n  Lista de campos de **firma** para el firmante. Usamos **anchors** para ubicarlos.\n\n  - **`anchorString`** *(string)*  \n    Texto **exacto** que DocuSign buscarÃ¡ en el PDF para colocar el campo de firma.  \n    - Ejemplos: `\"SN1\"`, `\"SN2\"` o variables `{{ $json.Keyword_1 }}`, `{{ $json.Keyword_2 }}` que contengan esos valores.\n\n  - **`anchorUnits`** *(string)*  \n    Unidades del desplazamiento. Suele usarse `\"pixels\"`.\n\n  - **`anchorYOffset`** *(string o nÃºmero)*  \n    Desplazamiento **vertical** respecto al ancla.  \n    - `0` â†’ justo en la posiciÃ³n del texto ancla.  \n    - Positivo â†’ **abajo**; negativo â†’ **arriba**.  \n    - Tip: si tu lÃ­nea de firma estÃ¡ **encima** del texto `SN1`, usar `-10` o `-15` puede posicionar el cuadro de firma sobre la lÃ­nea.\n\n  - **`anchorXOffset`** *(string o nÃºmero)*  \n    Desplazamiento **horizontal** respecto al ancla.  \n    - `0` â†’ alineado al inicio del texto ancla.  \n    - Positivo â†’ a la **derecha**; negativo â†’ a la **izquierda**.\n\n> Puedes aÃ±adir mÃ¡s tabs (por ejemplo `textTabs`, `dateSignedTabs`, etc.) con la misma mecÃ¡nica de anchors o coordenadas.\n\n---\n\n## Variables esperadas en tu **input JSON** (n8n)\n\n- `Email_1`, `Email_2` â†’ correos de firmantes.  \n- `Keyword_1`, `Keyword_2` â†’ valores del texto ancla (p.ej., `\"SN1\"`, `\"SN2\"`).  \n- `Location_x`, `Location_y` â†’ offsets del **firmante 1** (en pÃ­xeles).  \n- `Location_x_2`, `Location_y_2` â†’ offsets del **firmante 2** (en pÃ­xeles).  \n- (Opcional) `Nombre_1`, `Nombre_2` â†’ nombres visibles para email y pantalla.\n\n---\n\n## Buenas prÃ¡cticas y notas\n\n- **Prueba sin offsets** primero (`0`/`0`) y ajusta `anchorYOffset` con valores negativos si quieres subir el campo hacia la lÃ­nea de firma.  \n- Si un `anchorString` **no existe** en el PDF, DocuSign no podrÃ¡ colocar el campo y podrÃ­as obtener errores o firmar sin el campo esperado.  \n- Si quieres un **mensaje personalizado** en el email por destinatario, aÃ±ade `emailNotification` dentro de cada signer:\n  ```json\n  \"emailNotification\": {\n    \"emailSubject\": \"Firma pendiente: Documento legal para su revisiÃ³n\",\n    \"emailBody\": \"Estimado(a) {{ $json.Nombre_1 }}, ...\"\n  }\n  ```\n  O usa `emailBlurb` a nivel de sobre para un **mensaje Ãºnico** para todos.\n\n- **Orden de firma**: define el flujo (secuencial con `routingOrder` 1 â†’ 2). DocuSign gestiona automÃ¡ticamente el envÃ­o al siguiente firmante.\n\n---\n\n## Troubleshooting rÃ¡pido\n\n- **ERR_INVALID_URL** en n8n: no incluyas el mÃ©todo (`GET`, `POST`) dentro del campo **URL**.  \n- **Descarga de documento**: usa `Accept: application/pdf` y **Response Format = File** en n8n.  \n- **`accountId`**: normalmente es **numÃ©rico**. VerifÃ­calo con `GET https://account-d.docusign.com/oauth/userinfo` (usa `accounts[0].account_id` y `base_uri`).  \n- **Base64**: asegÃºrate de no enviar prefijos MIME.\n\n---\n\n## Ejemplo de anchors tÃ­picos\n\n- `anchorString: \"SN1\"` para firmante 1, con `anchorYOffset: \"-12\"`, `anchorXOffset: \"0\"`  \n- `anchorString: \"SN2\"` para firmante 2, con `anchorYOffset: \"-12\"`, `anchorXOffset: \"0\"`\n\nAjusta los valores hasta que el cuadro de firma quede **exactamente** sobre la lÃ­nea.\n\n---\n\n\n","height":3152,"width":784},"type":"n8n-nodes-base.stickyNote","position":[-6368,-768],"typeVersion":1,"id":"620375b3-f994-44b5-bccc-001ddf58beb7","name":"Sticky Note6"},{"parameters":{"assignments":{"assignments":[{"id":"8a7a9bb1-174d-4c9f-94ea-39b781e2b5f1","name":"Keyword_1","value":"SN1","type":"string"},{"id":"6ff9614b-e423-4b5d-ba0b-4d9b5cb6262f","name":"Location_y","value":"-29","type":"string"},{"id":"7df1e9ba-6992-46e3-9d0f-a0380792bbd6","name":"Location_x","value":"0","type":"string"},{"id":"66cf2f02-a82f-41ac-be5c-ee0cce258741","name":"Keyword_2","value":"SN2","type":"string"},{"id":"3643205b-4cc4-40b5-982f-87d38b7129c0","name":"Location_y_2","value":"-29","type":"string"},{"id":"27fbbd41-90aa-45f0-bf7a-d207a0eb2986","name":"Location_x_2","value":"0","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1360,224],"id":"65bdabe3-bd14-4be8-9d25-bb9852478cb5","name":"Set Envelop Parameters"},{"parameters":{"assignments":{"assignments":[{"id":"b5762ca3-db1d-43ff-a289-ee6987da07a6","name":"id_internal_employee_signer","value":"37","type":"string"},{"id":"7ea9efba-c8d9-4996-aaec-1526068c35d1","name":"id_process","value":"87","type":"string"},{"id":"434e3c10-8069-4a58-a90c-d2c20ead8085","name":"external_agent_name","value":"Jhoan Diaz ","type":"string"},{"id":"2f01d165-5df8-48ba-817c-5f49d35373bc","name":"external_agent_email","value":"jhoandiazsoftgic@gmail.com","type":"string"},{"id":"7a2c7952-4125-4598-a2b1-da1271db2cce","name":"document_path_to_sign","value":"Plantilla firmas.docx","type":"string"},{"id":"321c6762-7fec-4f8f-8565-83d2e583d1eb","name":"folder_name","value":"SOLVO","type":"string"},{"id":"2641fed3-b78d-4576-b043-1cb4d19e4fb8","name":"file_name","value":"Plantilla firmas.docx","type":"string"},{"id":"a80d8b1e-af99-4a98-b579-631c4def3a19","name":"sharepoint_location","value":"softwareestrategico","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1856,480],"id":"8f4a9bca-0efd-4d8d-8ed1-cf45d9ef4913","name":"Set Input Variables"},{"parameters":{"tableId":"envelope_status_logs","fieldsUi":{"fieldValues":[{"fieldId":"id_apertura","fieldValue":"={{ $('Set Input Variables').item.json.id_process }}"},{"fieldId":"envelope_id","fieldValue":"={{ $json.envelopeId }}"},{"fieldId":"uri","fieldValue":"={{ $json.uri }}"},{"fieldId":"status_datetime_sent","fieldValue":"={{ $json.statusDateTime }}"},{"fieldId":"status_id","fieldValue":"26"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1936,224],"id":"55c569b4-89bf-43c1-ad05-bf2b4af30c09","name":"Insert Envelope","credentials":{"supabaseApi":{"id":"FwL4MdWXiWLBxiET","name":"Supabase account"}}},{"parameters":{"inputSource":"jsonExample","jsonExample":"\n  {\n    \"id_internal_employee_signer\": \"37\",\n    \"id_process\": \"77\",\n    \"external_agent_name\": \"Jhoan Diaz \",\n    \"external_agent_email\": \"jhoandiazsoftgic@gmail.com\",\n    \"document_path_to_sign\": \"Plantilla firmas.docx\",\n    \"folder_name\": \"SOLVO\",\n    \"file_name\": \"Plantilla firmas.docx\",\n    \"sharepoint_location\": \"softwareestrategico\"\n  }\n"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-1872,208],"id":"1edf7cef-6858-4b49-854a-695bdf4115d5","name":"When Executed by Another Workflow"},{"parameters":{"content":"## Variables de ingreso \n\n### En el Nodo  set encontraras las  variables que simulan el input necesario para la obtencion del archivo ejemplo\n","height":640,"width":384,"color":6},"type":"n8n-nodes-base.stickyNote","position":[-1984,48],"typeVersion":1,"id":"056a5248-754b-4a1a-9c85-389e383f27e6","name":"Sticky Note1"},{"parameters":{"operation":"get","tableId":"users","filters":{"conditions":[{"keyName":"id","keyValue":"={{ $json.id_internal_employee_signer }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-1360,192],"id":"32db6ec6-a8bc-47bb-81d5-d81db99d693e","name":"Get  Internal  Solvo User","credentials":{"supabaseApi":{"id":"FwL4MdWXiWLBxiET","name":"Supabase account"}}}],"connections":{"Get Root Site":{"main":[[{"node":"Get Main Drive","type":"main","index":0}]]},"Get Main Drive":{"main":[[{"node":"Get Solvo Folder","type":"main","index":0}]]},"Get Solvo Folder":{"main":[[{"node":"Fetch PDF File","type":"main","index":0}]]},"Fetch PDF File":{"main":[[{"node":"Convert File Extractor","type":"main","index":0}]]},"Get DocuSign Access Token":{"main":[[{"node":"Get Account ID","type":"main","index":0}]]},"Set Token Claims":{"main":[[{"node":"Generate DocuSign Token","type":"main","index":0}]]},"Generate DocuSign Token":{"main":[[{"node":"Get DocuSign Access Token","type":"main","index":0}]]},"Convert File Extractor":{"main":[[{"node":"Set Token Claims","type":"main","index":0}]]},"Get Account ID":{"main":[[{"node":"Set Envelop Parameters","type":"main","index":0}]]},"Send Envelop":{"main":[[{"node":"Insert Envelope","type":"main","index":0}]]},"Set Envelop Parameters":{"main":[[{"node":"Send Envelop","type":"main","index":0}]]},"Set Input Variables":{"main":[[{"node":"Get  Internal  Solvo User","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"Set Input Variables","type":"main","index":0}]]},"Get  Internal  Solvo User":{"main":[[{"node":"Get Root Site","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"5070aaf7-4285-482a-b6a9-9e6ec5255ed2","triggerCount":0,"tags":[]}